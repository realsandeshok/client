{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sande\\\\stock-management-system\\\\client\\\\src\\\\components\\\\StockManagerPanel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ProductCard from './ProductCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockManagerPanel = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchProducts = async () => {\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/products');\n      setProducts(data);\n    };\n    fetchProducts();\n  }, []);\n\n  //   const handleUpdate = async (productId, updatedFields) => {\n  //     try {\n  //     const token = localStorage.getItem('token');\n  //     console.log(token)\n  //     const config =  { headers: {\n  //         'Authorization': `Bearer ${token}`,\n  //       },\n  //     };\n  //       const { data: updatedProduct } = await axios.put(`http://localhost:5000/api/products/${productId}`, updatedFields, config);\n  //       setProducts(products.map(p => (p._id === productId ? updatedProduct : p)));\n  //     } catch (error) {\n  //       console.error(\"Failed to update the product:\", error);\n  //     }\n  //   };\n\n  const handleUpdate = async (productId, updatedFields) => {\n    try {\n      const token = localStorage.getItem('authToken');\n      if (!token) {\n        throw new Error(\"No token found\");\n      }\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      };\n      const {\n        data: updatedProduct\n      } = await axios.put(`http://localhost:5000/api/products/${productId}`, updatedFields, config);\n\n      // Update the local state with the updated product\n      setProducts(products.map(p => p._id === productId ? updatedProduct : p));\n    } catch (error) {\n      console.error(\"Failed to update the product:\", error.response ? error.response.data : error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Stock Manager Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), products.map(product => /*#__PURE__*/_jsxDEV(ProductCard, {\n      product: product,\n      role: \"stockManager\",\n      onUpdate: handleUpdate\n    }, product._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(StockManagerPanel, \"f86L6rLANGURv6GE6gupp7+oOp4=\");\n_c = StockManagerPanel;\nexport default StockManagerPanel;\nvar _c;\n$RefreshReg$(_c, \"StockManagerPanel\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProductCard","jsxDEV","_jsxDEV","StockManagerPanel","_s","products","setProducts","fetchProducts","data","get","handleUpdate","productId","updatedFields","token","localStorage","getItem","Error","config","headers","updatedProduct","put","map","p","_id","error","console","response","message","children","fileName","_jsxFileName","lineNumber","columnNumber","product","role","onUpdate","_c","$RefreshReg$"],"sources":["C:/Users/sande/stock-management-system/client/src/components/StockManagerPanel.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ProductCard from './ProductCard';\r\n\r\nconst StockManagerPanel = () => {\r\n  const [products, setProducts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const { data } = await axios.get('http://localhost:5000/api/products');\r\n      setProducts(data);\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n\r\n//   const handleUpdate = async (productId, updatedFields) => {\r\n//     try {\r\n//     const token = localStorage.getItem('token');\r\n//     console.log(token)\r\n//     const config =  { headers: {\r\n//         'Authorization': `Bearer ${token}`,\r\n//       },\r\n//     };\r\n//       const { data: updatedProduct } = await axios.put(`http://localhost:5000/api/products/${productId}`, updatedFields, config);\r\n//       setProducts(products.map(p => (p._id === productId ? updatedProduct : p)));\r\n//     } catch (error) {\r\n//       console.error(\"Failed to update the product:\", error);\r\n//     }\r\n//   };\r\n\r\n\r\nconst handleUpdate = async (productId, updatedFields) => {\r\n    try {\r\n      const token = localStorage.getItem('authToken');\r\n\r\n      if (!token) {\r\n        throw new Error(\"No token found\");\r\n      }\r\n\r\n      const config = {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n      };\r\n\r\n      const { data: updatedProduct } = await axios.put(\r\n        `http://localhost:5000/api/products/${productId}`, \r\n        updatedFields, \r\n        config\r\n      );\r\n\r\n      // Update the local state with the updated product\r\n      setProducts(products.map(p => (p._id === productId ? updatedProduct : p)));\r\n    } catch (error) {\r\n      console.error(\"Failed to update the product:\", error.response ? error.response.data : error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Stock Manager Panel</h1>\r\n      {products.map((product) => (\r\n        <ProductCard\r\n          key={product._id}\r\n          product={product}\r\n          role=\"stockManager\"\r\n          onUpdate={handleUpdate}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockManagerPanel;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAC,oCAAoC,CAAC;MACtEH,WAAW,CAACE,IAAI,CAAC;IACnB,CAAC;IACDD,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAER;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAMG,YAAY,GAAG,MAAAA,CAAOC,SAAS,EAAEC,aAAa,KAAK;IACrD,IAAI;MACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;MAE/C,IAAI,CAACF,KAAK,EAAE;QACV,MAAM,IAAIG,KAAK,CAAC,gBAAgB,CAAC;MACnC;MAEA,MAAMC,MAAM,GAAG;QACbC,OAAO,EAAE;UACP,eAAe,EAAE,UAAUL,KAAK;QAClC;MACF,CAAC;MAED,MAAM;QAAEL,IAAI,EAAEW;MAAe,CAAC,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAC9C,sCAAsCT,SAAS,EAAE,EACjDC,aAAa,EACbK,MACF,CAAC;;MAED;MACAX,WAAW,CAACD,QAAQ,CAACgB,GAAG,CAACC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAKZ,SAAS,GAAGQ,cAAc,GAAGG,CAAE,CAAC,CAAC;IAC5E,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAACE,QAAQ,GAAGF,KAAK,CAACE,QAAQ,CAAClB,IAAI,GAAGgB,KAAK,CAACG,OAAO,CAAC;IACtG;EACF,CAAC;EAED,oBACEzB,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3B3B,QAAQ,CAACgB,GAAG,CAAEY,OAAO,iBACpB/B,OAAA,CAACF,WAAW;MAEViC,OAAO,EAAEA,OAAQ;MACjBC,IAAI,EAAC,cAAc;MACnBC,QAAQ,EAAEzB;IAAa,GAHlBuB,OAAO,CAACV,GAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIjB,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnEID,iBAAiB;AAAAiC,EAAA,GAAjBjC,iBAAiB;AAqEvB,eAAeA,iBAAiB;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}